# Generated by Django 2.0.6 on 2018-07-01 14:31

from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='affliation_mask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('affliation_name', models.CharField(max_length=25, verbose_name='affliation_name')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
            ],
            options={
                'verbose_name': 'Affliation Mask',
                'verbose_name_plural': 'Affliation Mask',
                'db_table': 'tbl_ag_affliation_mask',
            },
        ),
        migrations.CreateModel(
            name='agro_input_product_branded_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_trade_name', models.CharField(max_length=100, verbose_name='product trade name')),
                ('comb_flag', models.BooleanField(default=False)),
                ('component_num', models.IntegerField()),
                ('component_fraction', models.FloatField()),
                ('product_physical_form', models.CharField(max_length=100, verbose_name='')),
                ('application_physical_state', models.CharField(max_length=100, verbose_name='')),
                ('recommended_application_method', models.TextField(blank=True, null=True)),
                ('target_insects', models.CharField(max_length=100, verbose_name='')),
                ('growth_stage', models.CharField(max_length=100, verbose_name='')),
                ('links', models.TextField(blank=True, null=True)),
                ('affiliation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.affliation_mask')),
            ],
            options={
                'verbose_name': 'Input Product Branded List',
                'verbose_name_plural': 'Input Product Branded List',
                'db_table': 'tbl_ag_agro_input_product_branded_list',
            },
        ),
        migrations.CreateModel(
            name='agro_input_product_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organic_flag', models.BooleanField(default=False)),
                ('product_name', models.CharField(max_length=50, verbose_name='Product Name')),
            ],
            options={
                'verbose_name': 'Agro Input Product List',
                'verbose_name_plural': 'Agro Input Product List',
                'db_table': 'tbl_ag_agro_input_product_list',
            },
        ),
        migrations.CreateModel(
            name='brand_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=50, verbose_name='brand name')),
            ],
            options={
                'verbose_name': 'Brand List',
                'verbose_name_plural': 'Brand List',
                'db_table': 'tbl_ag_brand_list',
            },
        ),
        migrations.CreateModel(
            name='country_region_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_name', models.CharField(max_length=50, verbose_name='region name')),
            ],
            options={
                'verbose_name': 'Country Region List',
                'verbose_name_plural': 'Country Region List',
                'db_table': 'tbl_ag_country_region_list',
            },
        ),
        migrations.CreateModel(
            name='country_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=50, verbose_name='country name')),
                ('country_code_2', models.CharField(max_length=50, verbose_name='country code 2')),
                ('country_code_num', models.IntegerField()),
                ('gbl_region', models.CharField(max_length=50, verbose_name='gbl region')),
                ('gbl_sub_region', models.CharField(max_length=50, verbose_name='gbl sub region')),
                ('gbl_region_code', models.IntegerField()),
                ('gbl_sub_region_code', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Country Table',
                'verbose_name_plural': 'Country Table',
                'db_table': 'tbl_ag_country_table',
            },
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_name', models.CharField(max_length=100, unique=True, verbose_name='Crop Name')),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Comments')),
            ],
            options={
                'verbose_name': 'Crops',
                'verbose_name_plural': 'Crops',
                'db_table': 'tbl_ag_crops',
            },
        ),
        migrations.CreateModel(
            name='Crop_growth_stage_lists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('growth_stage_name', models.CharField(max_length=100, verbose_name='Growth stage name')),
                ('growth_stage_num', models.IntegerField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, null=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
            ],
            options={
                'verbose_name': 'Crop Stage Lists',
                'verbose_name_plural': 'Crop Stage Lists',
                'db_table': 'tbl_ag_crop_stage_lists',
            },
        ),
        migrations.CreateModel(
            name='Crop_Varieties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variety_name', models.CharField(max_length=500, unique=True, verbose_name='Variety Name')),
                ('seed_producer', models.CharField(max_length=100, verbose_name='Seed Producer')),
                ('potential_yield_lower', models.FloatField(null=True, verbose_name='Potential Yield Lower')),
                ('potential_yield_higher', models.FloatField(null=True, verbose_name='Potential Yield Higher')),
                ('potential_yiled_unit', models.CharField(max_length=100, null=True, verbose_name='Potential Yield Unit')),
                ('days_to_maturity', models.IntegerField(null=True, verbose_name='Days to Maturity')),
                ('r_to_r_spacing', models.FloatField(null=True, verbose_name='R to R Spacing')),
                ('p_to_p_spacing', models.FloatField(null=True, verbose_name='P to P Spacing')),
                ('spacing_units', models.CharField(max_length=100, null=True, verbose_name='Spacing Units')),
                ('planting_density', models.IntegerField(null=True, verbose_name='Planting Density')),
                ('planting_density_units', models.CharField(max_length=100, null=True, verbose_name='Planting Density units')),
                ('min_base_temp', models.IntegerField(null=True)),
                ('max_base_temp', models.IntegerField(null=True)),
                ('color', models.CharField(max_length=100, null=True, verbose_name='Color')),
                ('hardness', models.CharField(max_length=100, null=True, verbose_name='Hardness')),
                ('links', models.TextField(blank=True, null=True, verbose_name='Links')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='Remarks')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
            ],
            options={
                'verbose_name': 'Crop Varities',
                'verbose_name_plural': 'Crop Varities',
                'db_table': 'tbl_ag_crop_varities',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_abiotic_stresses_alerts_recos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_flag', models.BooleanField(default=False)),
                ('max_flag', models.BooleanField(default=True)),
                ('min_threshold', models.FloatField(null=True, verbose_name='min_threshold')),
                ('max_threshold', models.FloatField(null=True, verbose_name='max_threshold')),
                ('unit', models.CharField(max_length=25, verbose_name='unit')),
                ('min_breach_alert_txt', models.TextField(blank=True, null=True, verbose_name='min_breach_alert_txt')),
                ('affiliation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.affliation_mask')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('growth_stage', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_growth_stage_lists')),
            ],
            options={
                'verbose_name': 'Growth Stage Abiotic Stresses Alerts Recos',
                'verbose_name_plural': 'Growth Stage Abiotic Stresses Alerts Recos',
                'db_table': 'growth_stage_abiotic_stresses_alerts_recos',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_abiotic_stresses_alerts_variety_flags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('abiotic_alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.growth_stage_abiotic_stresses_alerts_recos')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('variety', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_Varieties')),
            ],
            options={
                'verbose_name': 'Growth Stage Abiotic Stresses Alerts Variety Flags',
                'verbose_name_plural': 'Growth Stage Abiotic Stresses Alerts Variety Flags',
                'db_table': 'tbl_ag_growth_stage_abiotic_stresses_alerts_variety_flags',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_pests_alerts_recos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_text', models.TextField()),
                ('rec_txt', models.TextField()),
                ('rec_product_quantity', models.FloatField()),
                ('rec_units', models.CharField(max_length=50, verbose_name='Rec Units')),
                ('application_method', models.TextField(null=True)),
                ('affiliation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.affliation_mask')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('growth_stage', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_growth_stage_lists')),
                ('productlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.agro_input_product_list')),
            ],
            options={
                'verbose_name': ('Growth Stage Pests Alerts Recos',),
                'verbose_name_plural': 'Growth Stage Pests Alerts Recos',
                'db_table': 'tbl_ag_growth_stage_pests_alerts_recos',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_pests_alerts_variety_flags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('pest_alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.growth_stage_pests_alerts_recos')),
                ('variety', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_Varieties')),
            ],
            options={
                'verbose_name': 'Growth Stage Pests Alerts Variety Flags',
                'verbose_name_plural': 'Growth Stage Pests Alerts Variety Flags',
                'db_table': 'tbl_ag_growth_stage_pests_alerts_variety_flags',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_recos_variety_flags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch', models.BooleanField(default=False)),
                ('comment', models.TextField()),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
            ],
            options={
                'verbose_name': 'Growth Stage Recos Variety Flags',
                'verbose_name_plural': 'Growth Stage Recos Variety Flags',
                'db_table': 'tbl_ag_growth_stage_recos_variety_flags',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_weeds_alerts_recos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_favourable_temp', models.IntegerField()),
                ('max_favourable_temp', models.IntegerField()),
                ('relative_humidity', models.CharField(max_length=50, verbose_name='relative humidity')),
                ('alert_text', models.TextField(blank=True, null=True)),
                ('rec_product', models.CharField(max_length=50, verbose_name='rec product')),
                ('rec_product_quantity', models.FloatField()),
                ('rec_units', models.CharField(max_length=50, verbose_name='rec units')),
                ('application_method', models.TextField(blank=True, null=True)),
                ('affiliation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.affliation_mask')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('growth_stage', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_growth_stage_lists')),
                ('productlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.agro_input_product_list')),
            ],
            options={
                'verbose_name': 'Growth Stage Weeds Alerts Recos',
                'verbose_name_plural': 'Growth Stage Weeds Alerts Recos',
                'db_table': 'tbl_ag_growth_stage_weeds_alerts_recos',
            },
        ),
        migrations.CreateModel(
            name='growth_stage_weeds_alerts_variety_flags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('switch', models.BooleanField(default=False)),
                ('comment', models.TextField(blank=True, null=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('variety', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_Varieties')),
                ('weed_alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.growth_stage_weeds_alerts_recos')),
            ],
            options={
                'verbose_name': 'Growth Stage Weeds Alerts Variety Flags',
                'verbose_name_plural': 'Growth Stage Weeds Alerts Variety Flags',
                'db_table': 'tbl_ag_growth_stage_weeds_alerts_variety_flags',
            },
        ),
        migrations.CreateModel(
            name='product_type_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(max_length=50, verbose_name='Product Type')),
            ],
            options={
                'verbose_name': 'Product Type List',
                'verbose_name_plural': 'Product Type List',
                'db_table': 'tbl_ag_product_type_list',
            },
        ),
        migrations.CreateModel(
            name='reco_Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Crop Name')),
                ('reco_category_name', models.CharField(max_length=100, verbose_name='Reco Category Name')),
            ],
            options={
                'verbose_name': 'Reco Category',
                'verbose_name_plural': 'Reco Category',
                'db_table': 'tbl_ag_reco_category',
            },
        ),
        migrations.CreateModel(
            name='stress_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stress_name', models.CharField(max_length=50, verbose_name='Stress Name')),
                ('min_favourable_temp', models.IntegerField()),
                ('max_favourable_temp', models.IntegerField()),
                ('unit', models.CharField(max_length=50, verbose_name='Unit')),
                ('moisture', models.CharField(max_length=50, verbose_name='Moisture')),
                ('initial_symptoms', models.CharField(max_length=50, verbose_name='initial symptoms')),
                ('later_symptoms', models.CharField(max_length=50, verbose_name='later symptoms')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
            ],
            options={
                'verbose_name': 'Stress List',
                'verbose_name_plural': 'Stress List',
                'db_table': 'tbl_ag_stress_list',
            },
        ),
        migrations.CreateModel(
            name='stress_type_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stress_type', models.CharField(max_length=50, verbose_name='Stress Type')),
            ],
            options={
                'verbose_name': 'Stress Type List',
                'verbose_name_plural': 'Stress Type List',
                'db_table': 'tbl_ag_stress_type_list',
            },
        ),
        migrations.CreateModel(
            name='tbl_ag_growth_stage_recos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rec_txt', models.TextField(blank=True, null=True, verbose_name='Rec Text')),
                ('rec_product', models.CharField(max_length=100, verbose_name='Rec Product')),
                ('rec_product_quantity', models.FloatField()),
                ('rec_units', models.CharField(max_length=100, verbose_name='Rec Units')),
                ('application_methods', models.TextField(blank=True, null=True, verbose_name='Rec Units')),
                ('stress_name', models.CharField(max_length=100, null=True, verbose_name='Stress Name')),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('growth_stage', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_growth_stage_lists')),
                ('reco_category', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.reco_Category')),
            ],
            options={
                'verbose_name': 'Growth Stage Recos',
                'verbose_name_plural': 'Growth Stage Recos',
                'db_table': 'tbl_ag_growth_stage_recos',
            },
        ),
        migrations.CreateModel(
            name='variety_growth_stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gdd', models.IntegerField()),
                ('cumulative_gdd', models.IntegerField()),
                ('days', models.IntegerField()),
                ('cumulative_days', models.IntegerField()),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop')),
                ('growth_stage', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_growth_stage_lists')),
                ('variety', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_Varieties')),
            ],
            options={
                'verbose_name': 'Variety Growth Stage Gdd',
                'verbose_name_plural': 'Variety Growth Stage Gdd',
                'db_table': 'tbl_ag_variety_growth_stage_gdd',
            },
        ),
        migrations.AddField(
            model_name='stress_list',
            name='stress',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.stress_type_list'),
        ),
        migrations.AddField(
            model_name='growth_stage_weeds_alerts_recos',
            name='reco_category',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='crop', chained_model_field='crop', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.reco_Category'),
        ),
        migrations.AddField(
            model_name='growth_stage_weeds_alerts_recos',
            name='stress_list',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='stress', chained_model_field='stress', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.stress_list'),
        ),
        migrations.AddField(
            model_name='growth_stage_recos_variety_flags',
            name='reco_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.tbl_ag_growth_stage_recos'),
        ),
        migrations.AddField(
            model_name='growth_stage_recos_variety_flags',
            name='variety',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.Crop_Varieties'),
        ),
        migrations.AddField(
            model_name='growth_stage_pests_alerts_recos',
            name='reco_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.reco_Category'),
        ),
        migrations.AddField(
            model_name='growth_stage_pests_alerts_recos',
            name='stress_list',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field='stress', chained_model_field='stress', on_delete=django.db.models.deletion.CASCADE, to='Agronomy.stress_list'),
        ),
        migrations.AddField(
            model_name='country_region_list',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.country_table'),
        ),
        migrations.AddField(
            model_name='agro_input_product_list',
            name='producttype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.product_type_list'),
        ),
        migrations.AddField(
            model_name='agro_input_product_branded_list',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.brand_list'),
        ),
        migrations.AddField(
            model_name='agro_input_product_branded_list',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.country_table'),
        ),
        migrations.AddField(
            model_name='agro_input_product_branded_list',
            name='productlist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.agro_input_product_list'),
        ),
        migrations.AddField(
            model_name='agro_input_product_branded_list',
            name='producttype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.product_type_list'),
        ),
        migrations.AddField(
            model_name='agro_input_product_branded_list',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Agronomy.country_region_list'),
        ),
    ]
